@using BouillonChanvre.Models
@using MudBlazor

<MudStack Row Class="py-3">
    <MudText Typo="Typo.h6">Variantes</MudText>

    <MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="AddNewVariant" Variant="Variant.Filled">Ajouter
    </MudButton>
</MudStack>
<MudTabs @bind-ActivePanelIndex="SelectedVariantIndex">
    <!-- Display variant tabs -->
    @foreach (var variant in Variants)
    {
        <MudTabPanel Text="@GetVariantDisplayText(variant)">
            <!-- Variant details (sizes for now) -->
            <div class="form-group">
                <MudTextField Label="Nom de la variante (optionnel)" @bind-Value="@variant.VariantName" />

                <MudNumericField @bind-Value="variant.Size" Label="Taille" />

                <MudSelect T="SizeUnit" @bind-Value="variant.SizeUnit" Label="Unité">
                    @foreach (SizeUnit sizeUnit in Enum.GetValues(typeof(SizeUnit)))
                    {
                        <MudSelectItem Value="@sizeUnit">@sizeUnit</MudSelectItem>
                    }
                </MudSelect>

                <MudTextField Label="Référence" @bind-Value="variant.Reference" />

                <MudTextField Label="Concentration de CBD" @bind-Value="variant.CBDConcentration" />

                <MudNumericField @bind-Value="variant.Price" Label="Prix (euro)" />
                <MudNumericField @bind-Value="variant.Stock" Label="Stock" />
            </div>
        </MudTabPanel>
    }
    </MudTabs>


    @code {
    [Parameter] public ICollection<ProductVariant> Variants { get; set; }
    private int SelectedVariantIndex { get; set; }

    protected override void OnInitialized()
    {
        if (Variants.Any())
        {
            SelectedVariantIndex = 0; // Select the first variant by default
        }
        else
        {
            AddNewVariant();
        }
    }

    private void AddNewVariant()
    {
        var newVariant = new ProductVariant { VariantName = $"Variante" };
        Variants.Add(newVariant);
        SelectedVariantIndex = Variants.Count - 1; // Select the newly added variant
    }

    private string GetVariantDisplayText(ProductVariant variant)
    {
        return $"{(string.IsNullOrWhiteSpace(variant.VariantName) ? "" : variant.VariantName + " ")}{variant.Size}{(variant.Size > 0 ? variant.SizeUnit : "")}";
    }
}
