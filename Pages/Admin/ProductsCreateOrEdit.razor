@page "/admin/products/create"
@page "/admin/products/edit/{ProductID:int}"
@using BouillonChanvre.Models
@using BouillonChanvre.Services
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<h3>@(isEditMode ? "Modifier le produit" : "Cr√©er un produit")</h3>

<EditForm Model="product" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Nom du produit</label>
        <InputText class="form-control" @bind-Value="@product.ProductName" />
    </div>
    <CategorySelector SelectedId="@product.CategoryID" OnSelectedIdChanged="OnCategoryChanged" />

    @if (product.CategoryID != null)
    {
        <SubCategorySelector SelectedId="@product.SubCategoryID" OnSelectedIdChanged="OnSubCategoryChanged"
            CategoryId="@product.CategoryID" />
    }

    @* <ProductVariantTabs Variants="@product.Variants" /> *@

    <ValidationSummary />
    <button type="submit" class="btn btn-primary">Enregistrer le produit</button>
</EditForm>

@code {
    private Product product = new Product();
    private bool isEditMode;
    [Parameter] public int? ProductID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (ProductID.HasValue)
        {
            isEditMode = true;

            product = await ProductService.GetProductById(ProductID.Value);

            if (product == null)
            {
                NavigationManager.NavigateTo("/products");
            }
        }
        else
        {
            isEditMode = false;
            product = new Product();
        }
    }

    private void OnCategoryChanged(int? id)
    {
        product.CategoryID = id ?? null;
        product.SubCategoryID = null;
        StateHasChanged();
    }

    private void OnSubCategoryChanged(int? id)
    {
        product.SubCategoryID = id ?? null;
        StateHasChanged();
    }

    private async Task HandleValidSubmit()
    {
        if (isEditMode)
        {
            await ProductService.UpdateProduct(product);

        }
        else
        {
            await ProductService.CreateProduct(product);
        }

        NavigationManager.NavigateTo("/admin/products");
    }
}
